;; System vars
(defpoll BRIGHTNESS :interval "1s" `brightnessctl g`)
(defpoll BATTERY :interval "5s" 
    `upower -i $(upower -e | head -n 1) | grep percentage | awk '{print $2}' | tr -d '%'`)
(defpoll BATTERY_STATE :interval "5s" 
    `upower -i $(upower -e | head -n 1) | grep state | awk '{print $2}'`)
(defpoll WIFI_STR :interval "1s" 
    `nmcli -t -f active,signal dev wifi | grep yes | cut -d ":" -f 2`)
(defpoll VOLUME :interval "1s" `pulsemixer --get-volume | cut -d ' ' -f 1`)
(defpoll MUTED :interval "1s" `pulsemixer --get-mute`)

;; Time vars
(defpoll TIME :interval  "5s" `date +\"%H:%M\"`)
(defpoll DATE :interval  "10h" `date +\"%A %m %d\"`)
(defpoll DAY :interval   "10h" `date +\"%d\"`)
(defpoll MONTH :interval "10h" `date +\"%m\"`)
(defpoll YEAR :interval  "10h" `date +\"%Y\"`)

;; Uptime vars
(defpoll UPHOUR :interval "5s" 
    `uptime -p | awk '{print $2 \" \" $3}' | sed 's/,//g'`)
(defpoll UPMIN :interval "5s" 
    `uptime -p | awk '{print $4 \" \" $5}'`)

;; Circular Systray Widgets
(defwidget radialmeter [value text ?class ?labelclass]
    (circular-progress 
        :value value
        :class "radial ${class}"
        :start-at 75
        :clockwise false
        :thickness 12
        (label 
            :text text
            :class "radial-label ${labelclass}"
            :limit-width 2
            :show-truncated false
            :wrap false
            :angle 0.0)))

(defwidget radial [value text ?class ?tooltip]
    (box 
        :class "radial-box"
        :tooltip tooltip
        :hexpand "false"
        (radialmeter 
            :value value
            :text text
            :labelclass class
            :class class)))

(defwidget brightness-radial []
    (radial 
        :tooltip "Current Brightness: ${BRIGHTNESS}%"
        :value BRIGHTNESS
        :text ""
        :class "brightness"))

(defwidget volume-radial []
    (radial 
        :tooltip {MUTED == '1' ? "Muted" : "Current Volume: ${VOLUME}%"}
        :value {MUTED == '1' ? 0 : VOLUME}
        :text {MUTED == '1' ? "" : " "}
        :class {MUTED == '1' ? "muted" : "volume"}))

(defwidget battery-radial []
    (radial 
        :tooltip "Battery Capacity: ${BATTERY}%"
        :value BATTERY
        :text {BATTERY_STATE == "discharging" ? "  " : ""}
        :class {BATTERY > 75 ? "battery-good" : BATTERY > 25 ? "battery-mid" : "battery-low"}))

(defwidget wifi-radial []
    (radial 
        :tooltip "Wifi signal strength: ${WIFI_STR}%"
        :value WIFI_STR
        :text ""
        :class "wifi"))

(defwidget radials []
    (box 
        :orientation 'v' 
        :space-evenly "false"
        (wifi-radial)
        (volume-radial)
        (battery-radial)
        (brightness-radial)))

(defwidget cal []
    (calendar 
        :class "calendar"
        :day 30
        :month 12
        :year 2024
        :show-details true
        :show-heading true
        :show-day-names true
        :show-week-numbers true))

(defwidget close-button[]
    (button 
    :active true
        :onclick "$HOME/.cargo/bin/eww close dashboard"
        "X"))

(defwidget buttons[]
    (box
        :orientation 'h' 
        :space-evenly "false"
        (close-button)
        ))

;; Main Widgets
(defwidget dashboard []
    (box 

        :orientation "h"
        :class "dashboard"
        (buttons)
        (radials)
        (cal)
        ))

(defwindow dashboard
    :monitor 0
    :geometry (geometry 
        :x "0"
        :y "0"
        :width "20%"
        :height "20%"
        :anchor "center")
    :windowtype "dock"
    :wm-ignore true
    (dashboard))

